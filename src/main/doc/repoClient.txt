== Generic Repo Client

GenericRepoClient offers a basic commandline interface to communicate 
with a digital repository provided by KIT Data Manager.

=== Requirements
NOTE: For managing digital objects the connections to the repository and to webDAV
have to be initialized in beforehand. Therefore the command **bin/setupRepo init -a**
has to be executed at least once.
To test the settings use the command **bin/setupRepo init -a -d** (For more details
see <<init>>)

=== Introduction
The commandline interface is accessible via the command **bin/repoClient**.
The command itself is divided in 3 subcommands tied to the life cycle of the
data:

- Ingest
- Retrieval/List
- Access

Each subcommand has specific parameters to configure/parameterize the commands.

=== Commands

==== Ingest
The **ingest** command uploads local data to the predefined repository. The
settings have to be initialized in beforehand. (see <<init>>)

===== Description
Ingest data from input directory to repository. It supports multiple input directories at
once. Each input directory will be ingested independently as a digital object. 

**Usage:** _bin/repoClient_ **ingest [options]**

.Options for ingest command
[cols="1,1,5a,1a",frame="topbot",options="header"]
|====================================================================
2+|Options | Description | Default

|Short | Long | |

| -i | --inputdir |  One or more input directories. All files from each directory will be
       ingested to repository. |

| -n | --note | Note added to the administrative metadata. | 

| -h | --help | Prints usage of command. | false

|====================================================================

**Example 1:** _bin/repoClient ingest -i /path1/to/data /path2/to/data -n "Any note\nsplitted in two lines."_

**Example 2:** _bin/repoClient ingest -i /path1/to/data -i /path2/to/data -n "Any note\nsplitted in two lines."_

==== List
The **list** command lists all readable digital objects of the predefined repository. The
settings have to be initialized in beforehand. (see <<init>>)

===== Description
List all 'DigitalObjectIdentifiers' of digital objects linked to predefined user/group/investigation.

**Usage:** _bin/repoClient_ **list [options]**

.Options for list command
[cols="1,1,5a,1a",frame="topbot",options="header"]
|====================================================================
2+|Options | Description | Default

|Short | Long | |

| -f | --failedIngest | The output lists only failed ingests. | false

| -r | --humanReadable | The output will be listed in a human readable format enriched by some metadata. | false

| -v | --verbose | Shows also the predefined settings. | false

| -h | --help | Prints usage of command. | false

|====================================================================

**Example:** _bin/repoClient list -r_


==== Download
The **download** command downloads a digital object to the local file system. The
settings have to be initialized in beforehand. (see <<init>>)

===== Description
Download digital object. 
**Attention:** In interactive mode the application is blocked until
a digital object is selected by keyboard.

**Usage:** _bin/repoClient_ **access [options]**

.Options for access command
[cols="1,1,5a,1a",frame="topbot",options="header"]
|====================================================================
2+|Options | Description | Default

|Short | Long | |

| -o | --outputdir | The output directory. All files from digital object will be downloaded to
       this directory. |

| -d | --digitalObjectId | DigitalObjectId' of the digital object. If no Id is given interactive
       mode will be activated. |

| -i | --interactive | Select one of the listed digital objects. | false

| -h | --help | Prints usage of command. | false

|====================================================================

**Example:** _bin/repoClient access -o /path/to/data -d 6b99f0f5-f822-433b-9f6c-e0ad492672f7_

==== Search
The **search** command search for digital objects whose metadata
contain the given terms. The settings have to be initialized in beforehand. (see <<init>>)

===== Description
Search in metadata of digital objects. 

**Usage:** _bin/repoClient_ **search [options]**

.Options for search command
[cols="1,1,5a,1a",frame="topbot",options="header"]
|====================================================================
2+|Options | Description | Default

|Short | Long | |

| -f | --field | Fields used for search. (not supported yet!) |

| -i | --index | Which index/indices should be used for search. (not supported yet!) | _all

| -t | --term | Search term(s) (only 1 term actually supported!)|

| -y | --type | Which type(s) should be used for search. (not supported yet!) | _all

| -h | --help | Prints usage of command. | false

|====================================================================

**Example:** _bin/repoClient search -t firstTerm -t secondTerm_

