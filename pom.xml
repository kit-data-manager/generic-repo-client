<?xml version="1.0"?>
<!--

    Copyright (C) 2014 Karlsruhe Institute of Technology 

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>edu.kit.dama.rest</groupId>
  <artifactId>GenericRepoClient</artifactId>
  <version>1.5</version>
  <name>GenericRepoClient</name>
  <description>Java API and CLI for ingesting/accessing data in a repository managed by KIT
    Data Manager. It also supports a rudimentary interface for generating
    and editing administrative metadata.</description>
  <url>http://maven.apache.org</url>
  <scm>
    <url>https://github.com/kit-data-manager/genericRepoClient</url>
  </scm>
  <properties>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <group>release</group>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!-- The following properties are needed for building asciidoc docu. -->
    <datestamp>${maven.build.timestamp}</datestamp>
    <maven.build.timestamp.format>MMM dd, yyyy</maven.build.timestamp.format>
  </properties>
  <dependencies>
    <dependency>
      <groupId>com.beust</groupId>
      <artifactId>jcommander</artifactId>
      <version>1.48</version>
    </dependency>    
    <dependency>
      <groupId>edu.kit.cmdline</groupId>
      <artifactId>CommandlineTools</artifactId>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>edu.kit.dama.rest</groupId>
      <artifactId>DataOrganizationRestInterface</artifactId>
      <version>1.5</version>
      <exclusions>
        <exclusion>
          <groupId>org.fzk.ipe</groupId>
          <artifactId>Tools</artifactId>
        </exclusion>
      </exclusions> 
    </dependency>
    <dependency>
      <groupId>edu.kit.dama</groupId>
      <artifactId>StagingService</artifactId>
      <version>1.5</version>
      <exclusions>
        <exclusion>
          <groupId>org.fzk.ipe</groupId>
          <artifactId>Tools</artifactId>
        </exclusion>
      </exclusions> 
    </dependency>
    <dependency>
      <groupId>edu.kit.dama.rest</groupId>
      <artifactId>BaseMetaDataRestInterface</artifactId>
      <version>1.5</version>
    </dependency>
    <dependency>
      <groupId>org.ini4j</groupId>
      <artifactId>ini4j</artifactId>
      <version>0.5.2</version>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-junit4</artifactId>
      <version>1.5.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-mockito</artifactId>
      <version>1.5.5</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <repositories>
    <repository>
      <id>localRepository</id>
      <name>Local file repository</name>
      <url>file://${basedir}/lib/</url>
    </repository>
    <repository>
      <id>eclipselink</id>
      <name>Repository for library Library[eclipselink]</name>
      <url>http://download.eclipse.org/rt/eclipselink/maven.repo</url>
    </repository>
    <repository>
      <id>miredot</id>
      <name>MireDot Releases</name>
      <url>http://nexus.qmino.com/content/repositories/miredot</url>
    </repository>
    <repository>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <id>com.hypnoticocelot</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
    </repository>
  </repositories>
  <build>
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-ssh-external</artifactId>
        <version>2.6</version>
      </extension>
    </extensions>
    <!-- *********************************************************************
    ***  Filtering data for the jar-file.                             ***
    ***  (resources and filters sections)
    ********************************************************************* -->
    <resources>
      <!-- First define resources which have to be filtered.
      See section 'filters' below. -->
      <resource>
        <directory>${basedir}/src/main/resources</directory>
        <filtering>true</filtering>
        <includes>
          <include>log4j.xml</include>
          <include>**/*.properties</include>
        </includes>
      </resource>
      <!-- Don't forget the other files. -->
      <resource>
        <directory>${basedir}/src/main/resources</directory>
        <filtering>false</filtering>
        <excludes>
          <exclude>*.xml</exclude>
          <exclude>**/*.properties</exclude>
        </excludes>
      </resource>
    </resources>
    <!-- define filter. If you want to switch between different filters
    you may define a property (default should be defined in the
    header of this file) via  commandline argument.
    -Dgroup=myFilter -->
    <filters>
      <filter>src/main/assemble/filter.${group}.properties</filter>
    </filters>
    <plugins>
      <!-- *********************************************************
      ***  Plugin for creating distribution of your application. ***
      ***  Filters should be placed in                           ***
      ***  ${basedir}/src/main/assemble/                         ***
      **************************************************************  -->
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <filters>
            <filter>${basedir}/src/main/assemble/filter.${group}.properties</filter>
          </filters>
          <descriptors>
            <descriptor>${basedir}/src/main/assemble/distribution.xml</descriptor>
          </descriptors>
          <outputDirectory>${basedir}/zip</outputDirectory>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>appassembler-maven-plugin</artifactId>
        <version>1.8</version>
        <executions>
          <execution>
            <id>package-executable</id>
            <phase>package</phase>
            <goals>
              <goal>assemble</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <assembleDirectory>${project.build.directory}</assembleDirectory>
          <repositoryName>jars</repositoryName>
          <!-- add the root dir to the classpath which is
          useful to find some files (but not the logging config
          file!?) -->
          <configurationDirectory>.</configurationDirectory>
          <!-- allows the project jar to be placed first in classpath.
          This is important due to configuration files which may
          occur more than once. -->
          <endorsedDir>lib</endorsedDir>
          <extraJvmArguments>-Dlogback.configurationFile=@BASEDIR@/logback.xml
            -Ddatamanager.config=@BASEDIR@/TransferClientSettings.xml</extraJvmArguments>
          <platforms>
            <platform>windows</platform>
            <platform>unix</platform>
          </platforms>
          <repositoryLayout>flat</repositoryLayout>
          <useWildcardClassPath>true</useWildcardClassPath>
          <programs>
            <program>
              <mainClass>edu.kit.dama.cmdline.generic.GenericExecutor</mainClass>
              <id>repoClient</id>
            </program>
            <program>
              <mainClass>edu.kit.dama.cmdline.generic.SetupKitDataManager</mainClass>
              <id>setupRepo</id>
            </program>
          </programs>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.6</version>
        <executions>
          <execution>
            <id>javadoc-jar</id>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.asciidoctor</groupId>
        <artifactId>asciidoctor-maven-plugin</artifactId>
        <version>1.5.0</version>
        <executions>
          <execution>
            <id>output-html</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>process-asciidoc</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <outputDirectory>${project.build.directory}/doc</outputDirectory>
          <sourceDirectory>src/main/doc/</sourceDirectory>
          <sourceDocumentName>documentation.txt</sourceDocumentName>
          <sourceHighlighter>highlightjs</sourceHighlighter>
          <backend>html5</backend>
          <attributes></attributes>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
